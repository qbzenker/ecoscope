name: Lint, test and build
on:
  push:
    branches: [main]
  release:
    types: [published]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{github.ref != 'refs/heads/main' }}

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Check out repository code & Install poetry
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: pip install poetry

      - name: Setup Poetry Cache
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install Python deps
        run: make install

      - name: Lint Repo
        run: make lint
  test:
    # environment: Testing
    name: ${{ matrix.os }}, ${{ matrix.env }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        env: [environment.yml]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Setup Poetry Cache
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Test
        env:
          ER_USERNAME: ${{ secrets.ER_USERNAME }}
          ER_PASSWORD: ${{ secrets.ER_PASSWORD }}
          EE_ACCOUNT: ${{ secrets.EE_ACCOUNT }}
          EE_PRIVATE_KEY_DATA: ${{ secrets.EE_PRIVATE_KEY_DATA }}
        run: make tests

      - name: Codecov
        uses: codecov/codecov-action@v3

  publish-package:
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [test, lint]
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Setup Poetry Cache
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Publish to PyPI
        run: poetry publish --build
        env:
          POETRY_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
